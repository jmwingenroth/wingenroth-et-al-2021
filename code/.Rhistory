}
lms3 <- bind_rows(monte2) %>%
mutate(ID = paste0(Re, 1:1000)) %>%
lmList(log(eta) ~ phi|ID, data = .) %>%
coefficients()
lms4 <- tibble(Re = str_sub(rownames(lms3),0,-1),lms3)
lms4 %>%
group_by(Re) %>%
summarise(avg = mean(phi, na.rm = TRUE), sd = sd(phi, na.rm = TRUE)) %>%
ggplot(aes(x = Re, y = avg, ymin = avg-1.96*sd, ymax = avg+1.96*sd)) +
geom_point() +
geom_errorbar() +
theme_bw() #+
#geom_text(aes(x = "0.0022", y = .0005, label = "*"), size = 8)
View(lms3)
View(lms4)
View(lms3)
lms4 <- tibble(Re = str_sub(rownames(lms3),0,6),lms3)
lms4 %>%
group_by(Re) %>%
summarise(avg = mean(phi, na.rm = TRUE), sd = sd(phi, na.rm = TRUE)) %>%
ggplot(aes(x = Re, y = avg, ymin = avg-1.96*sd, ymax = avg+1.96*sd)) +
geom_point() +
geom_errorbar() +
theme_bw() #+
geom_text(aes(x = "200.33", y = .0005, label = "*"), size = 8)
lms4 %>%
group_by(Re) %>%
summarise(avg = mean(phi, na.rm = TRUE), sd = sd(phi, na.rm = TRUE)) %>%
ggplot(aes(x = Re, y = avg, ymin = avg-1.96*sd, ymax = avg+1.96*sd)) +
geom_point() +
geom_errorbar() +
theme_bw() +
geom_text(aes(x = "200.33", y = .0005, label = "*"), size = 8)
lms2 %>%
group_by(phi) %>%
summarise(avg = mean(Re, na.rm = TRUE), sd = sd(Re, na.rm = TRUE)) %>%
ggplot(aes(x = phi, y = avg, ymin = avg-1.96*sd, ymax = avg+1.96*sd)) +
geom_point() +
geom_errorbar() +
theme_bw() +
geom_text(aes(x = "0.0022", y = avg+2.2*sd, label = "*"), size = 8)
lms2 %>%
group_by(phi) %>%
summarise(avg = mean(Re, na.rm = TRUE), sd = sd(Re, na.rm = TRUE)) %>%
ggplot(aes(x = phi, y = avg, ymin = avg-1.96*sd, ymax = avg+1.96*sd)) +
geom_point() +
geom_errorbar() +
theme_bw() +
geom_text(aes(x = "0.0022", y = .003, label = "*"), size = 8)
lms2 %>%
group_by(phi) %>%
summarise(avg = mean(Re, na.rm = TRUE), sd = sd(Re, na.rm = TRUE))
-.010649536+1.96*.005309518
lms2 %>%
group_by(phi) %>%
summarise(avg = mean(Re, na.rm = TRUE), sd = sd(Re, na.rm = TRUE)) %>%
mutate(ymax = avg + 1.96*sd)
skeleton_eta <- final %>%
filter(frontal_area > 0) %>%
select(phi, Re, eta, deta) %>%
arrange(phi, Re)
monte <- list()
for (i in 1:nrow(skeleton_eta)) {
monte[[i]] <- tibble(phi = skeleton_eta$phi[i],
Re = skeleton_eta$Re[i],
eta = rnorm(1000, mean = skeleton_eta$eta[i], sd = skeleton_eta$deta[i]))
}
lmphi <- bind_rows(monte) %>%
mutate(ID = paste0(phi, 1:1000)) %>%
lmList(log(eta) ~ Re|ID, data = .) %>%
coefficients()
skeleton_eta <- final %>%
filter(frontal_area > 0) %>%
select(phi, Re, eta, deta) %>%
arrange(phi, Re)
monte <- list()
for (i in 1:nrow(skeleton_eta)) {
monte[[i]] <- tibble(phi = skeleton_eta$phi[i],
Re = skeleton_eta$Re[i],
eta = rnorm(1000, mean = skeleton_eta$eta[i], sd = skeleton_eta$deta[i]))
}
lmsphi <- bind_rows(monte) %>%
mutate(ID = paste0(phi, 1:1000)) %>%
lmList(log(eta) ~ Re|ID, data = .) %>%
coefficients()
lmsphi <- tibble(phi = str_sub(rownames(lmsphi),0,6),lmsphi)
lmsphi <- lmsphi %>%
group_by(phi) %>%
summarise(avg = mean(Re, na.rm = TRUE), sd = sd(Re, na.rm = TRUE)) %>%
mutate(ymax = avg + 1.96*sd)
lmsphi
lmsphi %>%
ggplot(aes(x = phi, y = avg, ymin = avg-1.96*sd, ymax = avg+1.96*sd)) +
geom_point() +
geom_errorbar() +
theme_bw() +
geom_text(aes(x = "0.0022", y = .003, label = "*"), size = 8)
monte2 <- list()
for (i in 1:nrow(skeleton_eta)) {
monte2[[i]] <- tibble(phi = skeleton_eta$phi[i],
Re = skeleton_eta$Re[i],
eta = rnorm(5000, mean = skeleton_eta$eta[i], sd = skeleton_eta$deta[i]))
}
lmsre <- bind_rows(monte2) %>%
mutate(ID = paste0(Re, 1:5000)) %>%
lmList(log(eta) ~ phi|ID, data = .) %>%
coefficients()
lmsre <- tibble(Re = str_sub(rownames(lmsre),0,6),lmsre)
knitr::opts_chunk$set(echo = TRUE, fig.pos = "!H", out.extra = "")
library(tidyverse)
pumpfiles <- list.files("../data/peristaltic pumps/")
trapfiles <- list.files("../data/sediment traps/")
pumpdate <- str_sub(pumpfiles,0,6)
trapdate <- str_sub(trapfiles,0,6)
pumpdata <- lapply(pumpfiles, function(x) read_csv(paste0("../data/peristaltic pumps/",x)))
names(pumpdata) <- pumpdate
x <- pumpdata
tidypump <- lapply(seq_along(x), function(i) {
select(x[[i]],
loc = Location,
ht = Height,
t = `time series`,
mvc = contains("(ppm)")) %>%
filter(t < 21) %>% #filter a few timepoints outside the normal window
mutate(t = (t-min(t)+1)*300, #convert from timestep to seconds
mvc = as.numeric(mvc),
date = as.numeric(names(x)[[i]])) %>%
filter(mvc<80, mvc>8) #outliers were removed based on the residual graph
}
)
pump <- bind_rows(tidypump)
pump <- pump %>%
#first 3 runs had starting sediment mass of 100g rather than 200g
filter(date > 181005) %>%
#we can't use runs without sediment mass
filter(as.character(date) %in% trapdate)
metadata <- read_csv("../data/run_metadata.csv")
pump <- left_join(pump, metadata, by = "date")
pumpfinal <- pump %>%
filter(growth_days==0, date != 190417, date != 190802, # leaving out old control
dowel_density != "0232")
trapdata <- lapply(trapfiles, function(x) read_csv(paste0("../data/sediment traps/",x)))
names(trapdata) <- trapdate
x <- trapdata
tidytrap <- lapply(seq_along(x), function(i) {
select(x[[i]], station = 1, pre = contains("pre"), post = contains("post"), sed = contains("sed")) %>%
mutate(date = names(x)[i]) %>%
mutate_at(vars(pre,post,sed,date), as.numeric)
}
)
trap <- bind_rows(tidytrap) %>%
filter(!is.na(sed))
trapfinal <- left_join(trap, metadata, by = "date") %>%
filter(date %in% pumpfinal$date)
mutate_with_error = function(.data, f) {
exprs = list(
# expression to compute new variable values
deparse(f[[3]]),
# expression to compute new variable errors
sapply(all.vars(f[[3]]), function(v) {
dfdp = deparse(D(f[[3]], v))
sprintf('(d%s*(%s))^2', v, dfdp)
}) %>%
paste(collapse='+') %>%
sprintf('sqrt(%s)', .)
)
names(exprs) = c(
deparse(f[[2]]),
sprintf('d%s', deparse(f[[2]]))
)
.data %>%
# the standard evaluation alternative of mutate()
mutate_(.dots=exprs)
}
library(lme4)
fits <- lmList(data = pumpfinal, log(mvc)~t | date)
summary(fits)
cbind(pumpfinal, pred = predict(fits)) %>%
ggplot() +
geom_point(aes(x = t, y = mvc), size = .75, alpha = .5) +
geom_line(aes(x = t, y = exp(pred)), color = "red") +
facet_grid(pump_freq~dowel_density) +
scale_x_continuous(breaks = c(0,3000,6000), limits = c(0,6000))
cbind(pumpfinal, resid = residuals(fits)) %>%
ggplot(aes(x = t, y = resid, group = t)) +
geom_violin(alpha = .05) +
geom_smooth(inherit.aes = F, aes(x = t, y = resid))
fitdata <- coefficients(fits) %>%
mutate(k_t = -t) %>%
cbind(dk_t = summary(fits)[[4]][,,'t'][,2], date = as.numeric(row.names(coefficients(fits)))) %>%
left_join(metadata, by = "date") %>%
mutate(ad = as.numeric(dowel_density)*.003175^2*2/1.95, Re = pump_freq/500*.003175/9.509e-7) # DOWEL DENSITY CORRECTION INCLUDED HERE
fitdata %>%
ggplot(aes(x = Re, y = k_t, ymin = k_t - dk_t, ymax = k_t + dk_t, color = as.character(round(ad,5)))) +
geom_line(lty = "dotted", size = 2, alpha = .3) +
geom_point(position = position_dodge(width = 10)) +
geom_errorbar(width = 10, position = "dodge") +
scale_color_manual(values = c("black","blue","green","red")) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
labs(y = expression(paste(italic(k[t])," (",s^{-1},")")), x = expression(Re[c]), color = expression(italic(ad))) +
theme_minimal()
final <- trapfinal %>%
group_by(date) %>%
summarise(m_trap = mean(sed)/1000,
dm_trap = sd(sed)/1000) %>% #average sediment in trap converted from mg to g
mutate_with_error(m_s ~ m_trap*1.95*.6/(3.14159*.0127^2)) %>% #*A_TS/a_trap
left_join(fitdata, by = "date") %>%
mutate_with_error(c_s ~ m_s/200/(1-exp(-k_t*6000))) %>% #intermediate step to squash error
mutate_with_error(k_s ~ c_s*k_t)
final %>%
ggplot(aes(x = Re, y = k_s, ymin = k_s - dk_s, ymax = k_s + dk_s, color = as.character(round(ad,5)))) +
geom_line(lty = "dotted", size = 2, alpha = .3) +
geom_point(position = position_dodge(width = 10)) +
geom_errorbar(width = 10, position = "dodge") +
scale_color_manual(values = c("black","blue","green","red")) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
labs(y = expression(paste(italic(k[s])," (",s^{-1},")")), x = expression(Re[c]), color = expression(italic(ad))) +
theme_minimal()
bgvals <- final %>%
filter(dowel_density=="0000") %>%
mutate_with_error(k_bg ~ k_t - k_s) %>%
select(pump_freq, k_bg, dk_bg) %>%
arrange(pump_freq)
bgvals
final <- left_join(final, bgvals, by = "pump_freq")
final <- final %>%
mutate_with_error(k_c ~ k_t - k_s - k_bg)
final %>%
filter(dowel_density != "0000") %>%
ggplot(aes(x = Re, y = k_c, ymin = k_c - dk_c, ymax = k_c + dk_c, color = as.character(round(ad,5)))) +
geom_line(lty = "dotted", size = 2, alpha = .3) +
geom_point(position = position_dodge(width = 10)) +
geom_errorbar(width = 10, position = "dodge") +
scale_color_manual(values = c("blue","green","red")) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
labs(y = expression(paste(italic(k[c])," (",s^{-1},")")), x = expression(Re[c]), color = expression(italic(ad))) +
theme_minimal()
#temp in flume measured at 22.2C with a calibrated thermometer
#plugged into https://www.engineeringtoolbox.com/water-dynamic-kinematic-viscosity-d_596.html
visc = 9.509e-7 #kinematic viscosity, m2/s
d = .003175 #dowel diameter
final <- final %>%
mutate(frontal_area = as.numeric(dowel_density)*.003175,
u = as.numeric(pump_freq)/500, #velocity
Re = u*.003175/visc, #Reynolds #
k_t = -t,
k_c, k_s, k_bg) %>%
mutate(eta = k_c/u/frontal_area,
deta = dk_c/u/frontal_area) %>%
mutate(eta = eta * 2.43/(1.95*.4*.6),
deta = deta * 2.43/(1.95*.4*.6)) # don't forget to correct for time out of test section!
final %>%
filter(dowel_density != "0000") %>%
mutate(Refac = factor(Re, labels = c("Re = 66.78", "Re = 133.56", "Re = 200.34"))) %>%
ggplot(aes(x = ad, y = eta, ymin = eta - deta, ymax = eta + deta, color = as.character(round(ad,5)))) +
geom_line(lty = "dotted", size = 2, alpha = .3) +
geom_point() +
geom_errorbar() +
scale_color_manual(values = c("blue","green","red")) +
scale_y_continuous(labels = scales::percent) +
facet_wrap(~Refac) +
labs(y = "Effective capture efficiency", x = expression(italic(ad)), color = expression(italic(ad))) +
theme_bw()
final <- final %>%
mutate(frontal = ad/.003175, phi = ad*pi/4)
final %>%
select(dowel_density, frontal, ad, phi) %>%
distinct() %>%
arrange(ad) %>%
filter(ad>0)
cmods <- final %>%
mutate(coeff = 0.04312975*Re^-1.14) %>%
lmList(eta ~ 0 + coeff|phi, data = .)
c_over_phi <- cbind(rownames(coef(cmods))[2:4],coef(cmods)[2:4,]) %>%
as.tibble() %>%
mutate_all(as.numeric) %>%
mutate(lab = "ESDL") %>%
rename(phi = V1, C = V2)
fauria <- tibble(phi = c(.00817,.02163), C = c(3.18,1.53), lab = "Fauria")
c_over_phi <- rbind(c_over_phi, fauria)
c_over_phi %>%
ggplot(aes(x = phi, y = C, color = lab)) +
geom_point() +
theme_bw() +
labs(title = "Comparison of power-law constant to Fauria et al. data",
x = expression(phi))
# curve data
fauria_pred <- tibble(Re = rep(seq(66,200,length = 1000),3),
C = c(rep(46.46556,1000),rep(10.987587,1000),rep(8.983344,1000)),
phi = c(rep(0.002257447,1000),rep(0.006496250,1000),rep(0.011774453,1000))) %>%
mutate(eta_est = Re^-1.14*C*0.04312975, ad = phi)
final %>%
filter(dowel_density != "0000") %>%
mutate(Refac = factor(Re, labels = c("Re = 66.78", "Re = 133.56", "Re = 200.34"))) %>%
ggplot(aes(x = Re, y = eta, ymin = eta - deta, ymax = eta + deta, color = as.character(round(phi,5)))) +
geom_point() +
geom_errorbar() +
geom_line(data = fauria_pred, aes(y = eta_est, x = Re), inherit.aes = FALSE) +
scale_color_manual(values = c("blue","green","red")) +
scale_y_continuous(labels = scales::percent) +
facet_wrap(~ as.character(round(phi,5))) +
labs(y = "Effective capture efficiency", x = expression(Re), color = expression(phi)) +
theme_bw() +
ggtitle("Comparison of experiments and power-law model based on experiments")
skeleton_eta <- final %>%
filter(frontal_area > 0) %>%
select(phi, Re, eta, deta) %>%
arrange(phi, Re)
monte <- list()
for (i in 1:nrow(skeleton_eta)) {
monte[[i]] <- tibble(phi = skeleton_eta$phi[i],
Re = skeleton_eta$Re[i],
eta = rnorm(5000, mean = skeleton_eta$eta[i], sd = skeleton_eta$deta[i]))
}
lmsphi <- bind_rows(monte) %>%
mutate(ID = paste0(phi, 1:5000)) %>%
lmList(log(eta) ~ Re|ID, data = .) %>%
coefficients()
lmsphi <- tibble(phi = str_sub(rownames(lmsphi),0,6),lmsphi)
lmsphi <- lmsphi %>%
group_by(phi) %>%
summarise(avg = mean(Re, na.rm = TRUE), sd = sd(Re, na.rm = TRUE)) %>%
mutate(ymax = avg + 1.96*sd)
lmsphi
lmsphi %>%
ggplot(aes(x = phi, y = avg, ymin = avg-1.96*sd, ymax = avg+1.96*sd)) +
geom_point() +
geom_errorbar() +
theme_bw()
skeleton_eta <- final %>%
filter(frontal_area > 0) %>%
select(phi, Re, eta, deta) %>%
arrange(phi, Re)
monte <- list()
for (i in 1:nrow(skeleton_eta)) {
monte[[i]] <- tibble(phi = skeleton_eta$phi[i],
Re = skeleton_eta$Re[i],
eta = rnorm(5000, mean = skeleton_eta$eta[i], sd = skeleton_eta$deta[i]))
}
lmsphi <- bind_rows(monte) %>%
mutate(ID = paste0(phi, 1:5000)) %>%
lmList(log(eta) ~ Re|ID, data = .) %>%
coefficients()
lmsphi <- tibble(phi = str_sub(rownames(lmsphi),0,6),lmsphi)
lmsphi <- lmsphi %>%
group_by(phi) %>%
summarise(avg = mean(Re, na.rm = TRUE), sd = sd(Re, na.rm = TRUE)) %>%
mutate(ymax = avg + 1.96*sd)
lmsphi
lmsphi %>%
ggplot(aes(x = phi, y = avg, ymin = avg-1.96*sd, ymax = avg+1.96*sd)) +
geom_point() +
geom_errorbar() +
theme_bw()
skeleton_eta <- final %>%
filter(frontal_area > 0) %>%
select(phi, Re, eta, deta) %>%
arrange(phi, Re)
monte <- list()
for (i in 1:nrow(skeleton_eta)) {
monte[[i]] <- tibble(phi = skeleton_eta$phi[i],
Re = skeleton_eta$Re[i],
eta = rnorm(20000, mean = skeleton_eta$eta[i], sd = skeleton_eta$deta[i]))
}
lmsphi <- bind_rows(monte) %>%
mutate(ID = paste0(phi, 1:20000)) %>%
lmList(log(eta) ~ Re|ID, data = .) %>%
coefficients()
lmsphi <- tibble(phi = str_sub(rownames(lmsphi),0,6),lmsphi)
lmsphi <- lmsphi %>%
group_by(phi) %>%
summarise(avg = mean(Re, na.rm = TRUE), sd = sd(Re, na.rm = TRUE)) %>%
mutate(ymax = avg + 1.96*sd)
lmsphi
lmsphi %>%
ggplot(aes(x = phi, y = avg, ymin = avg-1.96*sd, ymax = avg+1.96*sd)) +
geom_point() +
geom_errorbar() +
theme_bw()
skeleton_eta <- final %>%
filter(frontal_area > 0) %>%
select(phi, Re, eta, deta) %>%
arrange(phi, Re)
monte <- list()
for (i in 1:nrow(skeleton_eta)) {
monte[[i]] <- tibble(phi = skeleton_eta$phi[i],
Re = skeleton_eta$Re[i],
eta = rnorm(20000, mean = skeleton_eta$eta[i], sd = skeleton_eta$deta[i]))
}
lmsphi <- bind_rows(monte) %>%
mutate(ID = paste0(phi, 1:20000)) %>%
lmList(log(eta) ~ Re|ID, data = .) %>%
coefficients()
lmsphi <- tibble(phi = str_sub(rownames(lmsphi),0,6),lmsphi)
lmsphi <- lmsphi %>%
group_by(phi) %>%
summarise(avg = mean(Re, na.rm = TRUE), sd = sd(Re, na.rm = TRUE)) %>%
mutate(ymax = avg + 1.96*sd)
lmsphi
lmsphi %>%
ggplot(aes(x = phi, y = avg, ymin = avg-1.96*sd, ymax = avg+1.96*sd)) +
geom_point() +
geom_errorbar() +
theme_bw()
monte2 <- list()
for (i in 1:nrow(skeleton_eta)) {
monte2[[i]] <- tibble(phi = skeleton_eta$phi[i],
Re = skeleton_eta$Re[i],
eta = rnorm(5000, mean = skeleton_eta$eta[i], sd = skeleton_eta$deta[i]))
}
lmsre <- bind_rows(monte2) %>%
mutate(ID = paste0(Re, 1:5000)) %>%
lmList(log(eta) ~ phi|ID, data = .) %>%
coefficients()
lmsre <- tibble(Re = str_sub(rownames(lmsre),0,6),lmsre)
lmsre <- lmsre %>%
group_by(Re) %>%
summarise(avg = mean(phi, na.rm = TRUE), sd = sd(phi, na.rm = TRUE)) %>%
mutate(ymax = avg + 1.96*sd)
lmsre
lmsre %>%
ggplot(aes(x = Re, y = avg, ymin = avg-1.96*sd, ymax = avg+1.96*sd)) +
geom_point() +
geom_errorbar() +
theme_bw()
lmsre %>%
ggplot(aes(x = as.numeric(Re), y = avg, ymin = avg-1.96*sd, ymax = avg+1.96*sd)) +
geom_point() +
geom_errorbar() +
theme_bw()
imaginary_eta <- final %>%
filter(frontal_area > 0) %>%
select(phi, Re, k_c, dk_c)
imaginary_eta
imaginary_eta %>%
mutate(eta = mean(k_c))
imaginary_eta <- final %>%
filter(frontal_area > 0) %>%
mutate(imagk_c = mean(k_c),
imagdk_c = mean(dk_c),
imageta = imagk_c/u/frontal_area,
imagdeta = imagdk_c/u/frontal_area)
imaginary_eta <- final %>%
filter(frontal_area > 0) %>%
mutate(imagk_c = mean(k_c),
imagdk_c = mean(dk_c),
imageta = imagk_c/u/frontal_area,
imagdeta = imagdk_c/u/frontal_area) %>%
mutate(imageta = imageta * 2.43/(1.95*.4*.6),
imagdeta = imagdeta * 2.43/(1.95*.4*.6))
imaginary_eta
imaginary_eta %>%
select(phi, Re, imageta, imagdeta)
imaginary_eta <- final %>%
filter(frontal_area > 0) %>%
mutate(imagk_c = mean(k_c),
imagdk_c = mean(dk_c),
imageta = imagk_c/u/frontal_area,
imagdeta = imagdk_c/u/frontal_area) %>%
mutate(imageta = imageta * 2.43/(1.95*.4*.6),
imagdeta = imagdeta * 2.43/(1.95*.4*.6)) %>%
select(phi, Re, imageta, imagdeta)
imaginary_eta <- final %>%
filter(frontal_area > 0) %>%
mutate(imagk_c = mean(k_c),
imagdk_c = mean(dk_c),
imageta = imagk_c/u/frontal_area,
imagdeta = imagdk_c/u/frontal_area) %>%
mutate(imageta = imageta * 2.43/(1.95*.4*.6),
imagdeta = imagdeta * 2.43/(1.95*.4*.6)) %>%
select(phi, Re, eta = imageta, imagdeta)
imaginary_eta <- final %>%
filter(frontal_area > 0) %>%
mutate(imagk_c = mean(k_c),
imagdk_c = mean(dk_c),
imageta = imagk_c/u/frontal_area,
imagdeta = imagdk_c/u/frontal_area) %>%
mutate(imageta = imageta * 2.43/(1.95*.4*.6),
imagdeta = imagdeta * 2.43/(1.95*.4*.6)) %>%
select(phi, Re, eta = imageta, imagdeta)
imaginary_eta <- final %>%
filter(frontal_area > 0) %>%
mutate(imagk_c = mean(k_c),
imagdk_c = mean(dk_c),
imageta = imagk_c/u/frontal_area,
imagdeta = imagdk_c/u/frontal_area) %>%
mutate(imageta = imageta * 2.43/(1.95*.4*.6),
imagdeta = imagdeta * 2.43/(1.95*.4*.6)) %>%
select(phi, Re, eta = imageta, imagdeta)
monte <- list()
for (i in 1:nrow(imaginary_eta)) {
monte[[i]] <- tibble(phi = imaginary_eta$phi[i],
Re = imaginary_eta$Re[i],
eta = rnorm(1000, mean = imaginary_eta$eta[i], sd = imaginary_eta$imagdeta[i]))
}
lmsphi <- bind_rows(monte) %>%
mutate(ID = paste0(phi, 1:1000)) %>%
lmList(log(eta) ~ Re|ID, data = .) %>%
coefficients()
lmsphi <- tibble(phi = str_sub(rownames(lmsphi),0,6),lmsphi)
lmsphi <- lmsphi %>%
group_by(phi) %>%
summarise(avg = mean(Re, na.rm = TRUE), sd = sd(Re, na.rm = TRUE)) %>%
mutate(ymax = avg + 1.96*sd)
lmsphi
lmsphi %>%
ggplot(aes(x = phi, y = avg, ymin = avg-1.96*sd, ymax = avg+1.96*sd)) +
geom_point() +
geom_errorbar() +
theme_bw()
imaginary_eta

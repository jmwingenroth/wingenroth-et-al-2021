mutate(eta = k_c/u/frontal_area,
deta = dk_c/u/frontal_area) %>%
mutate(eta = eta * 2.43/(1.95*.4*.6),
deta = deta * 2.43/(1.95*.4*.6)) # don't forget to correct for time out of test section!
plotece1 <- final %>%
filter(dowel_density != "0000") %>%
mutate(Refac = factor(Re, labels = c("Re = 66.78", "Re = 133.56", "Re = 200.34"))) %>%
ggplot(aes(x = factor(round(Re, 0)), y = eta, ymin = eta - deta, ymax = eta + deta, color = factor(ad, labels = c("0.22%","0.64%","1.17%")))) +
geom_point(position = position_dodge(width = .55)) +
geom_errorbar(width = 0.4, position = position_dodge(width = .55)) +
scale_y_continuous(labels = scales::percent) +
labs(y = "Effective Capture Efficiency", x = expression(paste("Collector Reynolds Number (",Re[c]," )")), color = expression(phi[c])) +
theme_bw() +
theme(legend.position = "bottom")
plotece2 <- final %>%
filter(dowel_density != "0000") %>%
mutate(Refac = factor(Re, labels = c("Re = 66.78", "Re = 133.56", "Re = 200.34"))) %>%
ggplot(aes(color = factor(round(Re, 0)), y = eta, ymin = eta - deta, ymax = eta + deta, x = factor(ad, labels = c("0.22%","0.64%","1.17%")))) +
geom_point(position = position_dodge(width = .55)) +
geom_errorbar(width = 0.4, position = position_dodge(width = .55)) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("purple","orange","brown")) +
labs(y = "Effective Capture Efficiency", color = expression(Re[c]), x = expression(paste("Collector Solid Volume Fraction (",phi[c]," )"))) +
theme_bw() +
theme(legend.position = "bottom",
legend.background = element_rect(colour = "black", size = .2))
plotece <- plot_grid(plotece1, plotece2, labels = c("(a)","(b)"), scale = .9, align = "lrtb")
save_plot("../pics/ece_plot.png",plotece, dpi = 600, base_asp = 1.75)
plotece
#temp in flume measured at 22.2C with a calibrated thermometer
#plugged into https://www.engineeringtoolbox.com/water-dynamic-kinematic-viscosity-d_596.html
visc = 9.509e-7 #kinematic viscosity, m2/s
d = .003175 #dowel diameter
final <- final %>%
mutate(frontal_area = as.numeric(dowel_density)*.003175,
u = as.numeric(pump_freq)/500, #velocity
Re = u*.003175/visc, #Reynolds #
k_c, k_s, k_bg) %>%
mutate(eta = k_c/u/frontal_area,
deta = dk_c/u/frontal_area) %>%
mutate(eta = eta * 2.43/(1.95*.4*.6),
deta = deta * 2.43/(1.95*.4*.6)) # don't forget to correct for time out of test section!
plotece1 <- final %>%
filter(dowel_density != "0000") %>%
mutate(Refac = factor(Re, labels = c("Re = 66.78", "Re = 133.56", "Re = 200.34"))) %>%
ggplot(aes(x = factor(round(Re, 0)), y = eta, ymin = eta - deta, ymax = eta + deta, color = factor(ad, labels = c("0.22%","0.64%","1.17%")))) +
geom_point(position = position_dodge(width = .55)) +
geom_errorbar(width = 0.4, position = position_dodge(width = .55)) +
scale_y_continuous(labels = scales::percent) +
labs(y = "Effective Capture Efficiency", x = expression(paste("Collector Reynolds Number (",Re[c]," )")), color = expression(phi[c])) +
theme_bw() +
theme(legend.position = "bottom")
plotece2 <- final %>%
filter(dowel_density != "0000") %>%
mutate(Refac = factor(Re, labels = c("Re = 66.78", "Re = 133.56", "Re = 200.34"))) %>%
ggplot(aes(color = factor(round(Re, 0)), y = eta, ymin = eta - deta, ymax = eta + deta, x = factor(ad, labels = c("0.22%","0.64%","1.17%")))) +
geom_point(position = position_dodge(width = .55)) +
geom_errorbar(width = 0.4, position = position_dodge(width = .55)) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("purple","orange","brown")) +
labs(y = "Effective Capture Efficiency", color = expression(Re[c]), x = expression(paste("Collector Solid Volume Fraction (",phi[c]," )"))) +
theme_bw() +
theme(legend.position = "bottom",
legend.background = element_rect(colour = "black", size = .15))
plotece <- plot_grid(plotece1, plotece2, labels = c("(a)","(b)"), scale = .9, align = "lrtb")
save_plot("../pics/ece_plot.png",plotece, dpi = 600, base_asp = 1.75)
plotece
#temp in flume measured at 22.2C with a calibrated thermometer
#plugged into https://www.engineeringtoolbox.com/water-dynamic-kinematic-viscosity-d_596.html
visc = 9.509e-7 #kinematic viscosity, m2/s
d = .003175 #dowel diameter
final <- final %>%
mutate(frontal_area = as.numeric(dowel_density)*.003175,
u = as.numeric(pump_freq)/500, #velocity
Re = u*.003175/visc, #Reynolds #
k_c, k_s, k_bg) %>%
mutate(eta = k_c/u/frontal_area,
deta = dk_c/u/frontal_area) %>%
mutate(eta = eta * 2.43/(1.95*.4*.6),
deta = deta * 2.43/(1.95*.4*.6)) # don't forget to correct for time out of test section!
plotece1 <- final %>%
filter(dowel_density != "0000") %>%
mutate(Refac = factor(Re, labels = c("Re = 66.78", "Re = 133.56", "Re = 200.34"))) %>%
ggplot(aes(x = factor(round(Re, 0)), y = eta, ymin = eta - deta, ymax = eta + deta, color = factor(ad, labels = c("0.22%","0.64%","1.17%")))) +
geom_point(position = position_dodge(width = .55)) +
geom_errorbar(width = 0.4, position = position_dodge(width = .55)) +
scale_y_continuous(labels = scales::percent) +
labs(y = "Effective Capture Efficiency", x = expression(paste("Collector Reynolds Number (",Re[c]," )")), color = expression(phi[c])) +
theme_bw() +
theme(legend.position = "bottom")
plotece2 <- final %>%
filter(dowel_density != "0000") %>%
mutate(Refac = factor(Re, labels = c("Re = 66.78", "Re = 133.56", "Re = 200.34"))) %>%
ggplot(aes(color = factor(round(Re, 0)), y = eta, ymin = eta - deta, ymax = eta + deta, x = factor(ad, labels = c("0.22%","0.64%","1.17%")))) +
geom_point(position = position_dodge(width = .55)) +
geom_errorbar(width = 0.4, position = position_dodge(width = .55)) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("purple","orange","brown")) +
labs(y = "Effective Capture Efficiency", color = expression(Re[c]), x = expression(paste("Collector Solid Volume Fraction (",phi[c]," )"))) +
theme_bw() +
theme(legend.position = "bottom",
legend.background = element_rect(colour = "black", size = .2))
plotece <- plot_grid(plotece1, plotece2, labels = c("(a)","(b)"), scale = .9, align = "lrtb")
save_plot("../pics/ece_plot.png",plotece, dpi = 600, base_asp = 1.75)
plotece
#temp in flume measured at 22.2C with a calibrated thermometer
#plugged into https://www.engineeringtoolbox.com/water-dynamic-kinematic-viscosity-d_596.html
visc = 9.509e-7 #kinematic viscosity, m2/s
d = .003175 #dowel diameter
final <- final %>%
mutate(frontal_area = as.numeric(dowel_density)*.003175,
u = as.numeric(pump_freq)/500, #velocity
Re = u*.003175/visc, #Reynolds #
k_c, k_s, k_bg) %>%
mutate(eta = k_c/u/frontal_area,
deta = dk_c/u/frontal_area) %>%
mutate(eta = eta * 2.43/(1.95*.4*.6),
deta = deta * 2.43/(1.95*.4*.6)) # don't forget to correct for time out of test section!
plotece1 <- final %>%
filter(dowel_density != "0000") %>%
mutate(Refac = factor(Re, labels = c("Re = 66.78", "Re = 133.56", "Re = 200.34"))) %>%
ggplot(aes(x = factor(round(Re, 0)), y = eta, ymin = eta - deta, ymax = eta + deta, color = factor(ad, labels = c("0.22%","0.64%","1.17%")))) +
geom_point(position = position_dodge(width = .55)) +
geom_errorbar(width = 0.4, position = position_dodge(width = .55)) +
scale_y_continuous(labels = scales::percent) +
labs(y = "Effective Capture Efficiency", x = expression(paste("Collector Reynolds Number (",Re[c]," )")), color = expression(phi[c])) +
theme_bw() +
theme(legend.position = "bottom",
legend.background = element_rect(colour = "black", size = .2))
plotece2 <- final %>%
filter(dowel_density != "0000") %>%
mutate(Refac = factor(Re, labels = c("Re = 66.78", "Re = 133.56", "Re = 200.34"))) %>%
ggplot(aes(color = factor(round(Re, 0)), y = eta, ymin = eta - deta, ymax = eta + deta, x = factor(ad, labels = c("0.22%","0.64%","1.17%")))) +
geom_point(position = position_dodge(width = .55)) +
geom_errorbar(width = 0.4, position = position_dodge(width = .55)) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("purple","orange","brown")) +
labs(y = "Effective Capture Efficiency", color = expression(Re[c]), x = expression(paste("Collector Solid Volume Fraction (",phi[c]," )"))) +
theme_bw() +
theme(legend.position = "bottom",
legend.background = element_rect(colour = "black", size = .2))
plotece <- plot_grid(plotece1, plotece2, labels = c("(a)","(b)"), scale = .9, align = "lrtb")
save_plot("../pics/ece_plot.png",plotece, dpi = 600, base_asp = 1.75)
plotece
knitr::opts_chunk$set(echo = TRUE, fig.pos = "!H", out.extra = "")
library(tidyverse)
library(broom)
library(cowplot)
library(lme4)
pumpfiles <- list.files("../data/peristaltic pumps/")
trapfiles <- list.files("../data/sediment traps/")
pumpdate <- str_sub(pumpfiles,0,6)
trapdate <- str_sub(trapfiles,0,6)
pumpdata <- lapply(pumpfiles, function(x) read_csv(paste0("../data/peristaltic pumps/",x)))
names(pumpdata) <- pumpdate
x <- pumpdata
tidypump <- lapply(seq_along(x), function(i) {
select(x[[i]],
loc = Location,
ht = Height,
t = `time series`,
mvc = contains("(ppm)")) %>%
filter(t < 21) %>% #filter a few timepoints outside the normal window
mutate(t = (t-min(t)+1)*300, #convert from timestep to seconds
mvc = as.numeric(mvc),
date = as.numeric(names(x)[[i]])) %>%
filter(mvc<80, mvc>8) #outliers were removed based on the residual graph
}
)
pump <- bind_rows(tidypump)
pump <- pump %>%
#first 3 runs had starting sediment mass of 100g rather than 200g
filter(date > 181005) %>%
#we can't use runs without sediment mass
filter(as.character(date) %in% trapdate)
metadata <- read_csv("../data/run_metadata.csv")
pump <- left_join(pump, metadata, by = "date")
pumpfinal <- pump %>%
filter(growth_days==0, !date %in% c(190417, 190802, 190926), # leaving out old control and
dowel_density != "0232")
trapdata <- lapply(trapfiles, function(x) read_csv(paste0("../data/sediment traps/",x)))
names(trapdata) <- trapdate
x <- trapdata
tidytrap <- lapply(seq_along(x), function(i) {
select(x[[i]], station = 1, pre = contains("pre"), post = contains("post"), sed = contains("sed")) %>%
mutate(date = names(x)[i]) %>%
mutate_at(vars(pre,post,sed,date), as.numeric)
}
)
trap <- bind_rows(tidytrap) %>%
filter(!is.na(sed))
trapfinal <- left_join(trap, metadata, by = "date") %>%
filter(date %in% pumpfinal$date)
mutate_with_error = function(.data, f) {
exprs = list(
# expression to compute new variable values
deparse(f[[3]]),
# expression to compute new variable errors
sapply(all.vars(f[[3]]), function(v) {
dfdp = deparse(D(f[[3]], v))
sprintf('(d%s*(%s))^2', v, dfdp)
}) %>%
paste(collapse='+') %>%
sprintf('sqrt(%s)', .)
)
names(exprs) = c(
deparse(f[[2]]),
sprintf('d%s', deparse(f[[2]]))
)
.data %>%
# the standard evaluation alternative of mutate()
mutate_(.dots=exprs)
}
###TEMP CODE!!!
#pumpfinal <- filter(pumpfinal, loc == "D")
library(broom)
r2mod <- list()
r2val <- list()
ktval <- list()
resids_lin <- list()
nlsmod <- list()
resids_exp <- list()
for (k in 1:length(unique(pumpfinal$date))) {
tempdata <- filter(pumpfinal) %>%
filter(date == unique(pumpfinal$date)[k])
r2mod[[k]] <- lm(data = tempdata, formula = log(mvc) ~ t)
r2val[[k]] <- summary(r2mod[[k]])$r.squared
ktval[[k]] <- -coef(r2mod[[k]])[2]
resids_lin[[k]] <- cbind(tempdata,resid = resid(r2mod[[k]]))
nlsmod[[k]] <- nls(data = tempdata, formula = mvc ~ a*exp(b*t), start = list(a = 80, b = 1e-4))
resids_exp[[k]] <- cbind(tempdata, resid = resid(nlsmod[[k]]))
}
names(r2mod) <- unique(pumpfinal$date)
names(r2val) <- unique(pumpfinal$date)
names(ktval) <- unique(pumpfinal$date)
r2final <- tibble(unlist(r2val), names(unlist(r2val)), unlist(ktval)) %>% #requires single digit start and stop
transmute(r2 = .[[1]],
kt = .[[3]],
start = str_sub(.[[2]], 6,6),
stop = str_sub(.[[2]], 12,12),
date = as.numeric(str_sub(.[[2]], 14,))) %>%
left_join(metadata, by = "date")
ktdata <- bind_rows(lapply(r2mod, tidy), .id = "date") %>%
filter(term == "t")
resids_lin <- bind_rows(resids_lin)
resids_exp <- bind_rows(resids_exp)
residplot <- function(dataset, title) {
ggplot(aes(x = t, y = resid), data = dataset) +
geom_point(alpha = .5) +
theme_bw() +
theme(plot.title = element_text(hjust = .5)) +
geom_hline(yintercept = 0, color = "black") +
geom_smooth(color = "red") +
labs(x = "Time (s)", y = "Residual Value") +
ggtitle(title)
}
varplot <- function(dataset) {
dataset %>%
group_by(t) %>%
summarise(var = sd(resid)^2) %>%
ggplot(aes(x = t, y = var)) +
geom_line() +
theme_bw() +
labs(x = "Time (s)", y = "Residual Variance")
}
p1 <- residplot(resids_exp, title = "Exponential Model")
p2 <- residplot(resids_lin, title = "Linear Model")
p3 <- varplot(resids_exp)
p4 <- varplot(resids_lin)
heterosked_plot <- plot_grid(p1, p2, p3, p4, align = "h", labels = c("(a)","(b)","(c)","(d)"), scale = .9)
ggsave("../pics/heterosked.png", heterosked_plot, dpi = 600, height = 5)
resids <- tibble(bind_rows(resids_lin)) %>%
mutate(t = as.numeric(t))
residmod <- aov(data = resids, formula = resid ~ loc * ht)
resids %>%
group_by(ht) %>%
summarise(mean(resid), mean(abs(resid)), n(), sd(resid))
summary(residmod)
fitdata <- ktdata %>%
mutate(k_t = -estimate, dk_t = std.error, date = as.numeric(date)) %>%
left_join(metadata, by = "date") %>%
mutate(ad = as.numeric(dowel_density)*.003175^2*2/1.95, Re = pump_freq/500*.003175/9.509e-7) # DOWEL DENSITY CORRECTION INCLUDED HERE
fitdata %>%
ggplot(aes(x = Re, y = k_t, ymin = k_t - 1.96*dk_t, ymax = k_t + 1.96*dk_t, color = as.character(round(ad,5)))) +
geom_line(lty = "dotted", size = 2, alpha = .3) +
geom_point(position = position_dodge(width = 10)) +
geom_errorbar(width = 10, position = "dodge") +
scale_color_manual(values = c("black","blue","green","red")) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
labs(y = expression(paste(italic(k[t])," (",s^{-1},")")), x = expression(Re[c]), color = expression(italic(ad))) +
theme_minimal()
final <- trapfinal %>%
group_by(date) %>%
summarise(m_trap = mean(sed)/1000,
dm_trap = sd(sed)/1000) %>% #average sediment in trap converted from mg to g
mutate_with_error(m_s ~ m_trap*1.95*.6/(3.14159*.0127^2)) %>% #*A_TS/a_trap
left_join(fitdata, by = "date") %>%
mutate_with_error(c_s ~ m_s/200/(1-exp(-k_t*6000))) %>% #intermediate step to squash error
mutate_with_error(k_s ~ c_s*k_t)
final %>%
ggplot(aes(x = Re, y = k_s, ymin = k_s - dk_s, ymax = k_s + dk_s, color = as.character(round(ad,5)))) +
geom_line(lty = "dotted", size = 2, alpha = .3) +
geom_point(position = position_dodge(width = 10)) +
geom_errorbar(width = 10, position = "dodge") +
scale_color_manual(values = c("black","blue","green","red")) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
labs(y = expression(paste(italic(k[s])," (",s^{-1},")")), x = expression(Re[c]), color = expression(italic(ad))) +
theme_minimal()
bgvals <- final %>%
filter(dowel_density=="0000") %>%
mutate_with_error(k_bg ~ k_t - k_s) %>%
select(pump_freq, k_bg, dk_bg) %>%
arrange(pump_freq)
bgvals
final <- left_join(final, bgvals, by = "pump_freq")
final <- final %>%
mutate_with_error(k_c ~ k_t - k_s - k_bg)
final %>%
filter(dowel_density != "0000") %>%
ggplot(aes(x = Re, y = k_c, ymin = k_c - dk_c, ymax = k_c + dk_c, color = as.character(round(ad,5)))) +
geom_line(lty = "dotted", size = 2, alpha = .3) +
geom_point(position = position_dodge(width = 10)) +
geom_errorbar(width = 10, position = "dodge") +
scale_color_manual(values = c("blue","green","red")) +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
labs(y = expression(paste(italic(k[c])," (",s^{-1},")")), x = expression(Re[c]), color = expression(italic(ad))) +
theme_minimal()
#temp in flume measured at 22.2C with a calibrated thermometer
#plugged into https://www.engineeringtoolbox.com/water-dynamic-kinematic-viscosity-d_596.html
visc = 9.509e-7 #kinematic viscosity, m2/s
d = .003175 #dowel diameter
final <- final %>%
mutate(frontal_area = as.numeric(dowel_density)*.003175,
u = as.numeric(pump_freq)/500, #velocity
Re = u*.003175/visc, #Reynolds #
k_c, k_s, k_bg) %>%
mutate(eta = k_c/u/frontal_area,
deta = dk_c/u/frontal_area) %>%
mutate(eta = eta * 2.43/(1.95*.4*.6),
deta = deta * 2.43/(1.95*.4*.6)) # don't forget to correct for time out of test section!
plotece1 <- final %>%
filter(dowel_density != "0000") %>%
mutate(Refac = factor(Re, labels = c("Re = 66.78", "Re = 133.56", "Re = 200.34"))) %>%
ggplot(aes(x = factor(round(Re, 0)), y = eta, ymin = eta - deta, ymax = eta + deta, color = factor(ad, labels = c("0.22%","0.64%","1.17%")))) +
geom_point(position = position_dodge(width = .55)) +
geom_errorbar(width = 0.4, position = position_dodge(width = .55)) +
scale_y_continuous(labels = scales::percent) +
labs(y = "Effective Capture Efficiency", x = expression(paste("Collector Reynolds Number (",Re[c]," )")), color = expression(phi[c])) +
theme_bw() +
theme(legend.position = "bottom",
legend.background = element_rect(colour = "black", size = .2))
plotece2 <- final %>%
filter(dowel_density != "0000") %>%
mutate(Refac = factor(Re, labels = c("Re = 66.78", "Re = 133.56", "Re = 200.34"))) %>%
ggplot(aes(color = factor(round(Re, 0)), y = eta, ymin = eta - deta, ymax = eta + deta, x = factor(ad, labels = c("0.22%","0.64%","1.17%")))) +
geom_point(position = position_dodge(width = .55)) +
geom_errorbar(width = 0.4, position = position_dodge(width = .55)) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("purple","orange","brown")) +
labs(y = "Effective Capture Efficiency", color = expression(Re[c]), x = expression(paste("Collector Solid Volume Fraction (",phi[c]," )"))) +
theme_bw() +
theme(legend.position = "bottom",
legend.background = element_rect(colour = "black", size = .2))
plotece <- plot_grid(plotece1, plotece2, labels = c("(a)","(b)"), scale = .9, align = "lrtb")
save_plot("../pics/ece_plot.png",plotece, dpi = 600, base_asp = 1.75)
plotece
TKEplot <- final %>%
filter(eta>0) %>%
arrange(frontal_area, u) %>%
select(dowel_density, u, eta, deta) %>%
mutate(TKE = c(1.23, 5.26, 12.2, 9.13, 35.9, 59.6, 11.1, 29.8, 54.4)) %>%
ggplot(aes(x = TKE, y = eta, ymax = eta + deta, ymin = eta - deta)) +
geom_point() +
geom_errorbar() +
theme_bw() +
scale_y_continuous(labels = scales::percent) +
labs(y = "Effective Capture Efficiency", x = expression(paste("Turbulent Kinetic Energy (",mm^{2}/s^{2},")")))
ggsave("../pics/tke.png", TKEplot, dpi = 600, height = 3, width = 5)
final <- final %>%
mutate(frontal = ad/.003175, phi = ad*pi/4)
final %>%
select(dowel_density, frontal, ad, phi) %>%
distinct() %>%
arrange(ad) %>%
filter(ad>0)
cmods <- final %>%
mutate(coeff = 0.04312975*Re^-1.14) %>%
lmList(eta ~ 0 + coeff|phi, data = .)
c_over_phi <- cbind(rownames(coef(cmods))[2:4],coef(cmods)[2:4,]) %>%
as.tibble() %>%
mutate_all(as.numeric) %>%
mutate(lab = "This study") %>%
rename(phi = V1, C = V2)
fauria <- tibble(phi = c(.00817,.02163), C = c(3.18,1.53), lab = "Fauria et al. (2015)")
c_over_phi <- rbind(c_over_phi, fauria)
lm(data = c_over_phi, formula = log10(C) ~ log10(phi)) %>%
summary
c_phi_curve <- tibble(phi = seq(0.002,.03,by = .0001), C = 10^-2.0966*phi^-1.4107)
cplot <- c_over_phi %>%
ggplot(aes(x = phi, y = C, pch = factor(lab, levels = c("This study", "Fauria et al. (2015)")), color = factor(lab, levels = c("This study", "Fauria et al. (2015)")))) +
geom_line(data = c_phi_curve, aes(x = phi, y = C), inherit.aes = FALSE) +
geom_point(size = 2) +
theme_bw() +
theme(legend.background = element_rect(colour = "black", size = .2))
labs(x = expression(paste("Collector Solid Volume Fraction (", phi[c], " )" )), color = "", pch = "") +
scale_color_manual(values = c("darkgreen","red")) +
scale_x_continuous(labels = scales::percent)
ggsave("../pics/cphiplot.png",cplot,dpi = 600, height = 4, units = "in")
c_over_phi <- cbind(rownames(coef(cmods))[2:4],coef(cmods)[2:4,]) %>%
as.tibble() %>%
mutate_all(as.numeric) %>%
mutate(lab = "This study") %>%
rename(phi = V1, C = V2)
fauria <- tibble(phi = c(.00817,.02163), C = c(3.18,1.53), lab = "Fauria et al. (2015)")
c_over_phi <- rbind(c_over_phi, fauria)
lm(data = c_over_phi, formula = log10(C) ~ log10(phi)) %>%
summary
c_phi_curve <- tibble(phi = seq(0.002,.03,by = .0001), C = 10^-2.0966*phi^-1.4107)
cplot <- c_over_phi %>%
ggplot(aes(x = phi, y = C, pch = factor(lab, levels = c("This study", "Fauria et al. (2015)")), color = factor(lab, levels = c("This study", "Fauria et al. (2015)")))) +
geom_line(data = c_phi_curve, aes(x = phi, y = C), inherit.aes = FALSE) +
geom_point(size = 2) +
theme_bw() +
labs(x = expression(paste("Collector Solid Volume Fraction (", phi[c], " )" )), color = "", pch = "") +
scale_color_manual(values = c("darkgreen","red")) +
scale_x_continuous(labels = scales::percent)
ggsave("../pics/cphiplot.png",cplot,dpi = 600, height = 4, units = "in")
c_over_phi <- cbind(rownames(coef(cmods))[2:4],coef(cmods)[2:4,]) %>%
as.tibble() %>%
mutate_all(as.numeric) %>%
mutate(lab = "This study") %>%
rename(phi = V1, C = V2)
fauria <- tibble(phi = c(.00817,.02163), C = c(3.18,1.53), lab = "Fauria et al. (2015)")
c_over_phi <- rbind(c_over_phi, fauria)
lm(data = c_over_phi, formula = log10(C) ~ log10(phi)) %>%
summary
c_phi_curve <- tibble(phi = seq(0.002,.03,by = .0001), C = 10^-2.0966*phi^-1.4107)
cplot <- c_over_phi %>%
ggplot(aes(x = phi, y = C, pch = factor(lab, levels = c("This study", "Fauria et al. (2015)")), color = factor(lab, levels = c("This study", "Fauria et al. (2015)")))) +
geom_line(data = c_phi_curve, aes(x = phi, y = C), inherit.aes = FALSE) +
geom_point(size = 2) +
theme_bw(legend.background = element_rect(colour = "black", size = .2)) +
labs(x = expression(paste("Collector Solid Volume Fraction (", phi[c], " )" )), color = "", pch = "") +
scale_color_manual(values = c("darkgreen","red")) +
scale_x_continuous(labels = scales::percent)
c_over_phi <- cbind(rownames(coef(cmods))[2:4],coef(cmods)[2:4,]) %>%
as.tibble() %>%
mutate_all(as.numeric) %>%
mutate(lab = "This study") %>%
rename(phi = V1, C = V2)
fauria <- tibble(phi = c(.00817,.02163), C = c(3.18,1.53), lab = "Fauria et al. (2015)")
c_over_phi <- rbind(c_over_phi, fauria)
lm(data = c_over_phi, formula = log10(C) ~ log10(phi)) %>%
summary
c_phi_curve <- tibble(phi = seq(0.002,.03,by = .0001), C = 10^-2.0966*phi^-1.4107)
cplot <- c_over_phi %>%
ggplot(aes(x = phi, y = C, pch = factor(lab, levels = c("This study", "Fauria et al. (2015)")), color = factor(lab, levels = c("This study", "Fauria et al. (2015)")))) +
geom_line(data = c_phi_curve, aes(x = phi, y = C), inherit.aes = FALSE) +
geom_point(size = 2) +
theme(legend.background = element_rect(colour = "black", size = .2)) +
theme_bw() +
labs(x = expression(paste("Collector Solid Volume Fraction (", phi[c], " )" )), color = "", pch = "") +
scale_color_manual(values = c("darkgreen","red")) +
scale_x_continuous(labels = scales::percent)
ggsave("../pics/cphiplot.png",cplot,dpi = 600, height = 4, units = "in")
c_over_phi <- cbind(rownames(coef(cmods))[2:4],coef(cmods)[2:4,]) %>%
as.tibble() %>%
mutate_all(as.numeric) %>%
mutate(lab = "This study") %>%
rename(phi = V1, C = V2)
fauria <- tibble(phi = c(.00817,.02163), C = c(3.18,1.53), lab = "Fauria et al. (2015)")
c_over_phi <- rbind(c_over_phi, fauria)
lm(data = c_over_phi, formula = log10(C) ~ log10(phi)) %>%
summary
c_phi_curve <- tibble(phi = seq(0.002,.03,by = .0001), C = 10^-2.0966*phi^-1.4107)
cplot <- c_over_phi %>%
ggplot(aes(x = phi, y = C, pch = factor(lab, levels = c("This study", "Fauria et al. (2015)")), color = factor(lab, levels = c("This study", "Fauria et al. (2015)")))) +
geom_line(data = c_phi_curve, aes(x = phi, y = C), inherit.aes = FALSE) +
geom_point(size = 2) +
theme_bw() +
theme(legend.background = element_rect(colour = "black", size = .2)) +
labs(x = expression(paste("Collector Solid Volume Fraction (", phi[c], " )" )), color = "", pch = "") +
scale_color_manual(values = c("darkgreen","red")) +
scale_x_continuous(labels = scales::percent)
ggsave("../pics/cphiplot.png",cplot,dpi = 600, height = 4, units = "in")
c_over_phi <- cbind(rownames(coef(cmods))[2:4],coef(cmods)[2:4,]) %>%
as.tibble() %>%
mutate_all(as.numeric) %>%
mutate(lab = "This study") %>%
rename(phi = V1, C = V2)
fauria <- tibble(phi = c(.00817,.02163), C = c(3.18,1.53), lab = "Fauria et al. (2015)")
c_over_phi <- rbind(c_over_phi, fauria)
lm(data = c_over_phi, formula = log10(C) ~ log10(phi)) %>%
summary
c_phi_curve <- tibble(phi = seq(0.002,.03,by = .0001), C = 10^-2.0966*phi^-1.4107)
cplot <- c_over_phi %>%
ggplot(aes(x = phi, y = C, pch = factor(lab, levels = c("This study", "Fauria et al. (2015)")), color = factor(lab, levels = c("This study", "Fauria et al. (2015)")))) +
geom_line(data = c_phi_curve, aes(x = phi, y = C), inherit.aes = FALSE) +
geom_point(size = 2) +
theme_bw() +
theme(legend.background = element_rect(colour = "black", size = .2),
legend.title = element_blank()) +
labs(x = expression(paste("Collector Solid Volume Fraction (", phi[c], " )" )), color = "", pch = "") +
scale_color_manual(values = c("darkgreen","red")) +
scale_x_continuous(labels = scales::percent)
ggsave("../pics/cphiplot.png",cplot,dpi = 600, height = 4, units = "in")
source('~/flume-paper/code/biofoulplot.r', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE, fig.pos = "!H", out.extra = "")
getwd()
setwd("..")
knitr::opts_chunk$set(echo = TRUE, fig.pos = "!H", out.extra = "")
3+3
